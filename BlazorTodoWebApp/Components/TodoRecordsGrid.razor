@page "/RecordsGrid"

<h3 style="text-align:center; text-decoration:underline;">TODO RECORDS</h3>
<br />
<button class="btn btn-primary oi oi-plus" @onclick="() => todoRecordModal.Show()"> New</button>
<br />
<br />
@if (TodoRecords == null)
{
    <h3>
        <em>No Records available...</em>
    </h3>
}
else
{
    <QuickGrid Items="TodoRecords" Pagination="pagination">
        <TemplateColumn Title="Week Worked" Sortable="true">
            @{
                var item = context as TodoRecord;
                DateTime? startDate = item.TodoWeek.TodoWeekStartDate;
                DateTime? endDate = item.TodoWeek.TodoWeekEndDate;
                string formattedTodoWeekStartDate = startDate.Value.ToShortDateString();
                string formattedTodoWeekEndDate = endDate.Value.ToShortDateString();

                string dateRange = $"{formattedTodoWeekStartDate} to {formattedTodoWeekEndDate}";
                <text>@dateRange</text>
            }
        </TemplateColumn>
        <PropertyColumn Property="@(t => t.FullName)" Title="Name" Sortable="true" />
        <PropertyColumn Property="@(t => t.ManagerDepartmentName)" Title="Manager" />
        <TemplateColumn Title="Actions">
            <button type="button" class="oi oi-pencil btn btn-success"></button>
            <button type="button" class="oi oi-trash btn btn-danger"></button>
        </TemplateColumn>
    </QuickGrid>
    <TodoRecordModal @ref="todoRecordModal"></TodoRecordModal> 
}


@code {

    public IQueryable<TodoRecord>? TodoRecords { get; set; }
    PaginationState pagination = new PaginationState { ItemsPerPage = 8 };

    public TodoRecord TodoRecord = new();
    public TodoRecordModal? todoRecordModal { get; set; }

    protected override async Task OnInitializedAsync()
    {
        TodoRecords = (_todoService.GetTodoRecords().AsQueryable());
    }

}